---

#------------------------------------------------------------------------------
# GENERAL
#------------------------------------------------------------------------------

postgresql_encoding: 'UTF-8'
postgresql_locale: 'pl_PL.UTF-8'

postgresql_admin_role: "postgres"
postgresql_default_auth_method: "trust"

postgresql_service_user: "{{ postgresql_admin_role }}"
postgresql_service_group: "{{ postgresql_admin_role }}"

postgresql_cluster_name: "main"
postgresql_cluster_reset: false

postgresql_database_owner: "{{ postgresql_admin_role }}"
postgresql_ext_install_contrib: no
postgresql_ext_install_dev_headers: yes

postgresql_databases: []

postgresql_roles: []

postgresql_role_privileges: []

#------------------------------------------------------------------------------
# POSTGRESQL HBA (HOST BASED AUTHENTICATION) CONFIGURATION FILE (pg_hba.conf)
#------------------------------------------------------------------------------

postgresql_pg_hba_default:
  - { type: local, database: all, user: '{{ postgresql_admin_role }}', address: '', method: '{{ postgresql_default_auth_method }}', comment: '' }
  - { type: local, database: all, user: all, address: '',             method: '{{ postgresql_default_auth_method }}', comment: '"local" is for Unix domain socket connections only' }
  - { type: host,  database: all, user: all, address: '127.0.0.1/32', method: '{{ postgresql_default_auth_method }}', comment: 'IPv4 local connections:' }
  - { type: host,  database: all, user: all, address: '::1/128',      method: '{{ postgresql_default_auth_method }}', comment: 'IPv6 local connections:' }

postgresql_pg_hba_passwd_hosts: []
postgresql_pg_hba_trust_hosts: []
postgresql_pg_hba_custom: []

#------------------------------------------------------------------------------
# POSTGRESQL SETTINGS CONFIGURATION FILE (postgresql.conf)
#------------------------------------------------------------------------------

########## FILE LOCATIONS

# Location of postgres configuration files here
postgresql_conf_directory: "/etc/postgresql/{{ postgresql_version }}/{{ postgresql_cluster_name }}"
# HBA (Host Based Authentication) file
postgresql_hba_file: "{{ postgresql_conf_directory }}/pg_hba.conf"
# Ident configuration file
postgresql_ident_file: "{{ postgresql_conf_directory }}/pg_ident.conf"
# Use data in another directory
postgresql_data_directory: "/var/lib/postgresql/{{ postgresql_version }}/{{ postgresql_cluster_name }}"
# If external_pid_file is not explicitly set, on extra PID file is written
postgresql_external_pid_file: "/var/run/postgresql/{{ postgresql_version }}-{{ postgresql_cluster_name }}.pid"

########## CONNECTIONS AND AUTHENTICATION

postgresql_listen_addresses:
  - localhost
postgresql_port: 5432

postgresql_max_connections: 100
postgresql_superuser_reserved_connections: 3

postgresql_unix_socket_directories:
  - /var/run/postgresql
postgresql_unix_socket_group: ''
postgresql_unix_socket_permissions: '0777' # Begin with 0 to use octal notation.

# Automatic pg_ctl configuration.
# For specifying a list of options containing cluster specific options to be
# passed to the pg_ctl(1) utility.
# The pg_ctl utility initializes, starts, stops, or restarts a PostgreSQL server.
postgresql_pg_ctl_options: []


# TCP keepalives, a setting of 0 selects the system default (in seconds).
postgresql_tcp_keepalives_idle: 0
postgresql_tcp_keepalives_interval: 0
postgresql_tcp_keepalives_count: 0

########## DATABASE RESOURCE USAGE SETTINGS (EXCEPT WAL)

# Memory settings.
# Enables/disables the use of huge memory pages. This setting is only supported
# in Linux.
# Valid settings are the following:
# - try - (default) try to use huge pages, but fall back to normal allocation if that fails
# - on - failure to use huge pages causes the server to prevent starting up
# - off - do not use huge pages
postgresql_huge_pages: try

postgresql_work_mem:             4MB   # minimum 64kB
postgresql_maintenance_work_mem: 16MB  # minimum 1MB
postgresql_shared_buffers:       128MB # minimum 128kB
postgresql_temp_buffers:         8MB   # minimum 800kB

# Dynamic shared memory implementation that the server should use.
# Valid settings are the following:
# - posix - for POSIX shared memory allocated using shm_open
# - sysv - for System V shared memory allocated via shmget
# - windows - for Windows shared memory
# - mmap - (not recommended) to simulate shared memory using memory-mapped files stored in the data directory
# - none - to disable this feature
postgresql_dynamic_shared_memory_type: posix

# Asynchronous behavior settings.
# Maximum number of background processes that the system can support.
postgresql_max_worker_processes: 8

# Note that increasing the 'max_prepared_transactions' settings costs ~600 bytes
# of shared memory per transaction slot, plus the lock space
# (see the 'max_locks_per_transaction' setting).
# It is not advisable to set `max_prepared_transactions` to non-zero value unless
# there is an active intent to use prepared transactions.
postgresql_max_prepared_transactions: 0 # 0 disables the feature

postgresql_max_stack_depth:      2MB   # minimum 100kB

# Disk settings.
# Limits the per-session temp file space in kilobytes (kB).
# A setting of -1 imposes no limit on this file space.
postgresql_temp_file_limit: -1

# Kernel resource usage settings.
postgresql_max_files_per_process: 1000  # minimum 25
postgresql_shared_preload_libraries: []

# Cost-based vacuum delay settings.
postgresql_vacuum_cost_delay:      0       # 0-100 milliseconds
postgresql_vacuum_cost_page_hit:   1       # 0-10000 credits
postgresql_vacuum_cost_page_miss:  10      # 0-10000 credits
postgresql_vacuum_cost_page_dirty: 20      # 0-10000 credits
postgresql_vacuum_cost_limit:      200     # 1-10000 credits


# Asynchronous behavior settings.
postgresql_effective_io_concurrency: 1     # 1-1000; 0 disables prefetching



########## ERROR REPORTING AND LOGGING

# Method through which to log server messages.
# Valid values are combinations of 'stderr', 'csvlog', 'syslog', and 'eventlog'
# depending on the platform. 'csvlog' requires that 'logging_collector' is on.
postgresql_log_destination: stderr

# Enable/disable the capturing of stderr and csvlog into log files.
# This setting must be set to 'on' for 'csvlog'.
postgresql_logging_collector: off

# The following settings are only effective if the 'logging_collector' setting is 'on':

# Directory where log files are written.
# This setting can be absolute or relative to PGDATA.
postgresql_log_directory: pg_log
# Log file name pattern.
# This setting can include strftime() escapes.
postgresql_log_filename: postgresql-%Y-%m-%d_%H%M%S.log
postgresql_log_file_mode: '0600' # prefix with 0 to use octal notation
# Instructs PostgreSQL to truncate (overwrite), rather than append to, any existing log file of the same name when 'logging_collector' is enabled.
# If set to 'on', an existing log file with the same name as the new log file
# will be truncated rather than appended to. However, such truncation only
# occurs on time-driven rotation and not on restarts or file size-driven rotation.
# The default setting is 'off' which means that the logger will append log messages
# to existing files in all cases.
postgresql_log_truncate_on_rotation: off
# Determines the maximum lifetime of an individual log file when 'logging_collector' is enabled.
postgresql_log_rotation_age: 1d
# Determines the maximum size of an individual log file when 'logging_collector' is enabled.
postgresql_log_rotation_size: 10MB

# The following settings are only effective when logging to 'syslog':

postgresql_syslog_facility: LOCAL0
postgresql_syslog_ident: postgres

# The following setting is only effective on Microsoft Windows platforms when logging to 'eventlog':

# When logging to event log is enabled, this parameter determines the program name used to identify PostgreSQL messages in the log.
postgresql_event_source: PostgreSQL


# Log frequency settings.

# Controls which message levels are sent to the client.
# Values in order of decreasing detail:
# - debug5
# - debug4
# - debug3
# - debug2
# - debug1
# - log
# - notice
# - warning
# - error
postgresql_client_min_messages: notice

# Controls which message levels are written to the server log.
# Values in order of decreasing detail:
# - debug5
# - debug4
# - debug3
# - debug2
# - debug1
# - info
# - notice
# - warning
# - error
# - log
# - fatal
# - panic
postgresql_log_min_messages: warning

# Controls which SQL statements that cause an error condition are recorded in the server log.
# Values in order of decreasing detail:
# - debug5
# - debug4
# - debug3
# - debug2
# - debug1
# - info
# - notice
# - warning
# - error
# - log
# - fatal
# - panic (effectively off)
postgresql_log_min_error_statement: error

# Causes the duration of each completed statement to be logged if the statement ran for at least the specified number of milliseconds.
# Valid settings are the following:
# -1 disables
# 0 logs all statements and their durations
# > 0 logs only
postgresql_log_min_duration_statement: -1


# Log content settings.

postgresql_debug_print_parse:     off
postgresql_debug_print_rewritten: off
postgresql_debug_print_plan:      off
postgresql_debug_pretty_print:    on
postgresql_log_checkpoints:       off
postgresql_log_connections:       off
postgresql_log_disconnections:    off
postgresql_log_duration:          off
postgresql_log_error_verbosity:   default  # terse, default, or verbose messages
postgresql_log_hostname:          off

# The printf-style string that is output at the beginning of each log line.
# Special values:
#   %a = application name
#   %u = user name
#   %d = database name
#   %r = remote host and port
#   %h = remote host
#   %p = process ID
#   %t = timestamp without milliseconds
#   %m = timestamp with milliseconds
#   %i = command tag
#   %e = SQL state
#   %c = session ID
#   %l = session line number
#   %s = sessioan start timestamp
#   %v = virtual transaction ID
#   %x = transaction ID (0 if none)
#   %q = stop here in non-session processes
#   %% = '%'
postgresql_log_line_prefix: '%t '

# Log lock waits that are greater than or equal to the 'deadlock_timeout' setting.
postgresql_log_lock_waits: off
# Controls which SQL statements are logged.
postgresql_log_statement:  none  # none, ddl, mod, all
# Controls logging of temporary file names and sizes.
# Valid settings are the following:
# - -1 disables
# - 0 logs all temporary file information
# - > 0 log only files whose size is greater than or equal to the specified number of kilobytes
postgresql_log_temp_files: -1

postgresql_log_timezone:   'localtime'

########## AUTOVACUUM PARAMETERS

# Enable/disable autovacuum subprocess.
# A settings of 'on' requires the 'track_counts' settings to also be set to 'on'.
postgresql_autovacuum: on
# Causes each action executed by autovacuum to be logged if it ran for at least the specified number of milliseconds.
# Valid settings are the following:
# - -1 disables
# - 0 logs all actions and their durations
# - > 0 logs only
# actions running at least this number of milliseconds.
postgresql_log_autovacuum_min_duration: -1
# Maximum number of autovacuum subprocesses.
postgresql_autovacuum_max_workers: 3
# Time between autovacuum runs.
postgresql_autovacuum_naptime: 1min
# Minimum number of updated or deleted tuples needed to trigger a VACUUM in any one table.
postgresql_autovacuum_vacuum_threshold: 50
# Minimum number of inserted, updated or deleted tuples needed to trigger an ANALYZE in any one table.
postgresql_autovacuum_analyze_threshold: 50
# Fraction of the table size to add to the 'autovacuum_vacuum_threshold' setting when deciding whether to trigger a VACUUM.
postgresql_autovacuum_vacuum_scale_factor: 0.2
# Fraction of the table size to add to the 'autovacuum_analyze_threshold' setting when deciding whether to trigger an ANALYZE.
postgresql_autovacuum_analyze_scale_factor: 0.1
# Maximum age (in transactions) that a table's pg_class.relfrozenxid field can attain before a VACUUM operation is forced to prevent transaction ID wraparound within the table.
postgresql_autovacuum_freeze_max_age: 200000000
# Cost delay value that will be used in automatic VACUUM operations.
postgresql_autovacuum_vacuum_cost_delay: 20ms
# Cost limit value that will be used in automatic VACUUM operations.
postgresql_autovacuum_vacuum_cost_limit: -1
# Maximum amount of memory to be used by each autovacuum worker process.
# Valid settings are the following:
# - -1 indicates that the value of the 'maintenance_work_mem' setting should be used
# - > 0MB (minimum is 1MB)
postgresql_autovacuum_work_mem: -1

########## CLIENT CONNECTION DEFAULTS

# Statement behavior settings.
postgresql_search_path: # schema names
  - '"$user"'
  - public
postgresql_default_tablespace: '' # a tablespace name, '' uses the default
postgresql_temp_tablespaces: [] # a list of tablespace names

postgresql_check_function_bodies:          on
postgresql_default_transaction_isolation:  read committed
postgresql_default_transaction_read_only:  off
postgresql_default_transaction_deferrable: off
postgresql_session_replication_role:       origin

postgresql_statement_timeout:       0  # in milliseconds, 0 is disabled
postgresql_lock_timeout:            0  # in milliseconds, 0 is disabled
postgresql_vacuum_freeze_min_age:   50000000
postgresql_vacuum_freeze_table_age: 150000000

postgresql_bytea_output: hex  # hex, escape
postgresql_xmlbinary:    base64
postgresql_xmloption:    content

# Locale and formatting settings.
postgresql_datestyle:
  - iso
  - mdy
postgresql_intervalstyle:      postgres
postgresql_timezone:           'localtime'

postgresql_extra_float_digits: 0          # min -15, max 3
postgresql_client_encoding:    sql_ascii  # 'sql_ascii' actually defaults to database encoding

# These settings are initialized by initdb, but they can be changed.

# Locale for system error message.
postgresql_lc_messages: pl_PL.UTF-8
# Locale for monetary formatting.
postgresql_lc_monetary: pl_PL.UTF-8
# Locale for number formatting.
postgresql_lc_numeric: pl_PL.UTF-8
# Locale for time formatting.
postgresql_lc_time: pl_PL.UTF-8

postgresql_default_text_search_config: pg_catalog.english

postgresql_dynamic_library_path: '$libdir'
postgresql_local_preload_libraries: []

# Select the set of available time zone abbreviations.
# Currently, there are:
# - Default
# - Australia (historical usage)
# - India
# Custom time zone abbreviations can be added by creating a file in `share/timezonesets/`.
postgresql_timezone_abbreviations: Default

# Specifies one or more shared libraries that are to be preloaded at connection start.
# Unlike the 'shared_preload_libraries' setting, there is no large performance
# advantage to loading a library at session start rather than when it is first
# used. There is some advantage, however, when connection pooling is used.
postgresql_session_preload_libraries: []

postgresql_env:
  LC_ALL: "{{ postgresql_locale }}"
  LC_LCTYPE: "{{ postgresql_locale }}"
